<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.graduation.dao.UserDao">

    <resultMap type="com.study.graduation.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userAccount" column="user_account" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, user_account, user_name, password, create_time, modify_time
        from dev_management.user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, user_account,user_name, password, create_time, modify_time
        from dev_management.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, user_account,user_name, password, create_time, modify_time
        from dev_management.user
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="userAccount != null and userAccount != ''">
                and user_account = #{userAccount}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.user(id,user_account,user_name, password, create_time, modify_time)
        values (#{id},#{userAccount},#{userName}, #{password}, #{createTime}, #{modifyTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.user(user_account, password, create_time, modify_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userAccount}, #{entity.password}, #{entity.createTime}, #{entity.modifyTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.user(user_account, password, create_time, modify_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userAccount}, #{entity.password}, #{entity.createTime}, #{entity.modifyTime})
        </foreach>
        on duplicate key update
        user_account = values(user_account) , password = values(password) , create_time = values(create_time) ,
        modify_time = values(modify_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update dev_management.user
        <set>
            <if test="userAccount != null and userAccount != ''">
                user_account = #{userAccount},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from dev_management.user where id = #{id}
    </delete>

</mapper>


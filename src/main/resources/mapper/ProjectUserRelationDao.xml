<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.graduation.dao.ProjectUserRelationDao">

    <resultMap type="com.study.graduation.entity.ProjectUserRelation" id="ProjectUserRelationMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="projectId" column="project_id" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ProjectUserRelationMap">
        select
          id, user_id, project_id, create_time, modify_time
        from dev_management.project_user_relation
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ProjectUserRelationMap">
        select
          id, user_id, project_id, create_time, modify_time
        from dev_management.project_user_relation
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ProjectUserRelationMap">
        select
        id, user_id, project_id, create_time, modify_time
        from dev_management.project_user_relation
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="projectId != null and projectId != ''">
                and project_id = #{projectId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="modifyTime != null">
                and modify_time = #{modifyTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.project_user_relation(id,role,user_id, project_id, create_time, modify_time)
        values (#{id},#{role},#{userId}, #{projectId}, #{createTime}, #{modifyTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.project_user_relation(user_id, project_id, create_time, modify_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.projectId}, #{entity.createTime}, #{entity.modifyTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into dev_management.project_user_relation(user_id, project_id, create_time, modify_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.projectId}, #{entity.createTime}, #{entity.modifyTime})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , project_id = values(project_id) , create_time = values(create_time) , modify_time =
        values(modify_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update dev_management.project_user_relation
        <set>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="projectId != null and projectId != ''">
                project_id = #{projectId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from dev_management.project_user_relation where id = #{id}
    </delete>

</mapper>

